Version 9.10.0 of NTL, or newer, is suitable. C++ exceptions must
be enabled (NTL_EXCEPTIONS)!

On Unix systems, please issue a ./configure followed by a make
within libNTL/unix.d/src.

To enable McEliece for other systems, please follow the following
suggestions. Good luck!

1. Verify that libtool is installed. On Debian-based systems, issue
sudo apt-get install libtool-bin. Please ignore on FreeBSD, MacOS,
and Windows.

2. Create a special libntl target. Please note that a kernel's
project file will reference different libNTL paths (../../../libNTL).
Please ignore on FreeBSD, MacOS, and Windows.

libntl.commands = cd ../../libNTL/unix.d/src && $(MAKE)
libntl.depends =
libntl.target = libntl.so

3. Modify DEFINES.

DEFINES	+= SPOTON_MCELIECE_ENABLED

4. Modify INCLUDEPATH and LIBS.

INCLUDEPATH += ../../libNTL/unix.d/include
LIBS += -L../../libNTL/unix.d/src/.libs -lntl

On FreeBSD, NTL may require GMP.

LIBS += -lgmp -lntl

On MacOS, Homebrew should be used. NTL may require GMP.

LIBS += -lgmp -lntl

5. Modify QMAKE_CLEAN. FreeBSD, MacOS, and Windows, please ignore.

QMAKE_CLEAN += ../../libNTL/unix.d/src/*.o ../../libNTL/unix.d/src/*.lo

6. Modify PRE_TARGETDEPS and QMAKE_EXTRA_TARGETS.
Please ignore on FreeBSD, MacOS, and Windows.

PRE_TARGETDEPS = libntl.so libntru.so
QMAKE_EXTRA_TARGETS = libntl libntru purge
